# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  doctrine_behaviors_blameable_user_entity: App\Entity\User
  roles:
    - { key: ROLE_ADMIN, value: Administrator, order: 1 }
    - { key: ROLE_USER, value: User, order: -1 }
    - { key: ROLE_TEAM_LEADER, value: Team Leader, order: 2 }
    - { key: ROLE_CUSTOMER_SUPPORT, value: Customer Support, order: 3 }
  account_types:
    - TYPE_STAFF
    - TYPE_CUSTOMER

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
        
    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerDecorator.inner']
        autoconfigure: false

    app.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    App\Service\CalculateRoles:
      arguments: 
            - '@security.token_storage'
            - '%roles%'

    App\Service\RoleKeyService:
      arguments:
            - '@serializer.name_converter.camel_case_to_snake_case'

    App\Doctrine\CollectionRoleCheckpointExtension:
      tags:
        - { name: api_platform.doctrine.orm.query_extension.collection }
        - { name: api_platform.doctrine.orm.query_extension.item }

    App\DataProvider\InformationCollectionDataProvider:
      tags: [ { name: 'api_platform.collection_data_provider', priority: 1 } ]
      # Autoconfiguration must be disabled to set a custom priority
      autoconfigure: false
      arguments:
          $collectionExtensions: !tagged api_platform.doctrine.orm.query_extension.collection

          
    App\DataProvider\UserCollectionDataProvider:
      tags: [ { name: 'api_platform.collection_data_provider', priority: 1 } ]
      # Autoconfiguration must be disabled to set a custom priority
      autoconfigure: false
      arguments:
          $collectionExtensions: !tagged api_platform.doctrine.orm.query_extension.collection
